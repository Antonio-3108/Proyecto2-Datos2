
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: online_store
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d online_store"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
   
  backend:
    build: ./backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      DATABASE_URL: "postgresql://user:password@db/online_store"
      REDIS_URL: "redis://redis:6379/0"
    ports:
      - "8000:8000"

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

  redis:
    image: redis
    restart: always
    ports:
      - "6379:6379"

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_pass
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo_pass
      ME_CONFIG_BASICAUTH_USERNAME: admin  # Web UI username
      ME_CONFIG_BASICAUTH_PASSWORD: adminpass  # Web UI password
    depends_on:
      - mongo


volumes:  
  pg_data:
  mongo_data: